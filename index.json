	
openapi	"3.0.0"
info	
title	"HTTP Api Example"
version	"1.0"
tags	
0	
name	"Users"
1	
name	"Posts"
2	
name	"Comments"
3	
name	"Auth"
4	
name	"Courses"
5	
name	"Tasks"
paths	
/comments	
get	
operationId	"CommentService_list"
parameters	
0	
name	"skip"
in	"query"
required	false
schema	
type	"integer"
format	"uint16"
default	0
explode	false
1	
name	"limit"
in	"query"
required	false
schema	
type	"integer"
format	"uint16"
default	30
explode	false
2	
name	"select"
in	"query"
required	false
schema	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Comments"
tags	
0	"Comments"
post	
operationId	"CommentService_create"
parameters	[]
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Comment"
tags	
0	"Comments"
requestBody	
required	true
content	
application/json	
schema	
$ref	"#/components/schemas/NewCommentDto"
security	
0	
BearerAuth	[]
/comments/{id}	
get	
operationId	"CommentService_get"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
1	
name	"select"
in	"query"
required	false
schema	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Comment"
tags	
0	"Comments"
patch	
operationId	"CommentService_update"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Comment"
tags	
0	"Comments"
requestBody	
required	true
content	
application/json	
schema	
$ref	"#/components/schemas/EditCommentDto"
security	
0	
BearerAuth	[]
delete	
operationId	"CommentService_delete"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
responses	
204	
description	"There is no content to send for this request, but the headers may be useful. "
tags	
0	"Comments"
security	
0	
BearerAuth	[]
/courses	
get	
operationId	"CourseService_list"
parameters	
0	
name	"skip"
in	"query"
required	false
schema	
type	"string"
explode	false
1	
name	"limit"
in	"query"
required	false
schema	
type	"string"
explode	false
2	
name	"select"
in	"query"
required	false
schema	
type	"array"
items	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Courses"
tags	
0	"Courses"
security	
0	
ApiKeyAuth	[]
post	
operationId	"CourseService_create"
parameters	[]
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Course"
tags	
0	"Courses"
requestBody	
required	true
content	
application/json	
schema	
$ref	"#/components/schemas/NewCourseDto"
security	
0	
ApiKeyAuth	[]
/courses/{id}	
get	
operationId	"CourseService_get"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
1	
name	"select"
in	"query"
required	false
schema	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Course"
tags	
0	"Courses"
security	
0	
ApiKeyAuth	[]
patch	
operationId	"CourseService_update"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Course"
tags	
0	"Courses"
requestBody	
required	true
content	
application/json	
schema	
$ref	"#/components/schemas/EditCourseDto"
security	
0	
ApiKeyAuth	[]
delete	
operationId	"CourseService_delete"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
responses	
204	
description	"There is no content to send for this request, but the headers may be useful. "
tags	
0	"Courses"
security	
0	
ApiKeyAuth	[]
/login	
post	
operationId	"AuthService_create"
parameters	[]
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/AuthToken"
tags	
0	"Auth"
requestBody	
required	true
content	
application/json	
schema	
$ref	"#/components/schemas/AuthData"
/posts	
get	
operationId	"PostService_list"
parameters	
0	
name	"skip"
in	"query"
required	false
schema	
type	"integer"
format	"uint16"
default	0
explode	false
1	
name	"limit"
in	"query"
required	false
schema	
type	"integer"
format	"uint16"
default	30
explode	false
2	
name	"select"
in	"query"
required	false
schema	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Posts"
tags	
0	"Posts"
post	
operationId	"PostService_create"
parameters	[]
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Post"
tags	
0	"Posts"
requestBody	
required	true
content	
application/json	
schema	
$ref	"#/components/schemas/NewPostDto"
security	
0	
BearerAuth	[]
/posts/{id}	
get	
operationId	"PostService_get"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
1	
name	"select"
in	"query"
required	false
schema	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Post"
tags	
0	"Posts"
patch	
operationId	"PostService_update"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Post"
tags	
0	"Posts"
requestBody	
required	true
content	
application/json	
schema	
$ref	"#/components/schemas/EditPostDto"
security	
0	
BearerAuth	[]
delete	
operationId	"PostService_delete"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
responses	
204	
description	"There is no content to send for this request, but the headers may be useful. "
tags	
0	"Posts"
security	
0	
BearerAuth	[]
/posts/{postId}/comments	
get	
operationId	"PostService_getComments"
parameters	
0	
name	"postId"
in	"path"
required	true
schema	
type	"string"
1	
name	"skip"
in	"query"
required	false
schema	
type	"integer"
format	"uint16"
default	0
explode	false
2	
name	"limit"
in	"query"
required	false
schema	
type	"integer"
format	"uint16"
default	30
explode	false
3	
name	"select"
in	"query"
required	false
schema	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Comments"
tags	
0	"Posts"
/tasks	
get	
operationId	"TaskService_list"
parameters	
0	
name	"skip"
in	"query"
required	false
schema	
type	"string"
explode	false
1	
name	"limit"
in	"query"
required	false
schema	
type	"string"
explode	false
2	
name	"select"
in	"query"
required	false
schema	
type	"array"
items	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Tasks"
tags	
0	"Tasks"
post	
operationId	"TaskService_create"
parameters	[]
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Task"
tags	
0	"Tasks"
requestBody	
required	true
content	
application/json	
schema	
$ref	"#/components/schemas/NewTaskDto"
security	
0	
BasicAuth	[]
/tasks/{id}	
get	
operationId	"TaskService_get"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
1	
name	"select"
in	"query"
required	false
schema	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Task"
tags	
0	"Tasks"
security	
0	
BasicAuth	[]
patch	
operationId	"TaskService_update"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Task"
tags	
0	"Tasks"
requestBody	
required	true
content	
application/json	
schema	
$ref	"#/components/schemas/EditTaskDto"
security	
0	
BasicAuth	[]
delete	
operationId	"TaskService_delete"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
responses	
204	
description	"There is no content to send for this request, but the headers may be useful. "
tags	
0	"Tasks"
security	
0	
BasicAuth	[]
/users	
get	
operationId	"UserService_list"
parameters	
0	
name	"skip"
in	"query"
required	false
schema	
type	"string"
explode	false
1	
name	"limit"
in	"query"
required	false
schema	
type	"string"
explode	false
2	
name	"select"
in	"query"
required	false
schema	
type	"array"
items	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Users"
tags	
0	"Users"
post	
operationId	"UserService_create"
parameters	[]
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/User"
tags	
0	"Users"
requestBody	
required	true
content	
application/json	
schema	
$ref	"#/components/schemas/NewUserDto"
/users/{authorId}/comments	
get	
operationId	"UserService_getComments"
parameters	
0	
name	"authorId"
in	"path"
required	true
schema	
type	"string"
1	
name	"skip"
in	"query"
required	false
schema	
type	"integer"
format	"uint16"
default	0
explode	false
2	
name	"limit"
in	"query"
required	false
schema	
type	"integer"
format	"uint16"
default	30
explode	false
3	
name	"select"
in	"query"
required	false
schema	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Comments"
tags	
0	"Users"
/users/{authorId}/posts	
get	
operationId	"UserService_getPosts"
parameters	
0	
name	"authorId"
in	"path"
required	true
schema	
type	"string"
1	
name	"skip"
in	"query"
required	false
schema	
type	"integer"
format	"uint16"
default	0
explode	false
2	
name	"limit"
in	"query"
required	false
schema	
type	"integer"
format	"uint16"
default	30
explode	false
3	
name	"select"
in	"query"
required	false
schema	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/Posts"
tags	
0	"Users"
/users/{id}	
get	
operationId	"UserService_get"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
1	
name	"select"
in	"query"
required	false
schema	
type	"string"
explode	false
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/User"
tags	
0	"Users"
patch	
operationId	"UserService_update"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
responses	
200	
description	"The request has succeeded."
content	
application/json	
schema	
$ref	"#/components/schemas/User"
tags	
0	"Users"
requestBody	
required	true
content	
application/json	
schema	
$ref	"#/components/schemas/EditUserDto"
security	
0	
BearerAuth	[]
delete	
operationId	"UserService_delete"
parameters	
0	
name	"id"
in	"path"
required	true
schema	
type	"string"
responses	
204	
description	"There is no content to send for this request, but the headers may be useful. "
tags	
0	"Users"
security	
0	
BearerAuth	[]
components	
schemas	
AuthData	
type	"object"
required	
0	"email"
1	"password"
properties	
email	
type	"string"
minLength	1
password	
type	"string"
minLength	1
AuthToken	
type	"object"
required	
0	"token"
properties	
token	
type	"string"
minLength	1
Comment	
type	"object"
required	
0	"id"
1	"authorId"
2	"postId"
3	"body"
properties	
id	
type	"integer"
format	"uint16"
authorId	
type	"integer"
format	"uint16"
postId	
type	"integer"
format	"uint16"
body	
type	"string"
minLength	1
Comments	
type	"object"
required	
0	"comments"
1	"total"
2	"skip"
3	"limit"
properties	
comments	
type	"array"
items	
$ref	"#/components/schemas/Comment"
total	
type	"integer"
format	"uint16"
skip	
type	"integer"
format	"uint16"
limit	
type	"integer"
format	"uint16"
default	30
Course	
type	"object"
required	
0	"id"
1	"title"
2	"description"
properties	
id	
type	"integer"
format	"uint16"
title	
type	"string"
minLength	1
description	
type	"string"
minLength	1
Courses	
type	"object"
required	
0	"courses"
1	"total"
2	"skip"
3	"limit"
properties	
courses	
type	"array"
items	
$ref	"#/components/schemas/Course"
total	
type	"integer"
format	"uint16"
skip	
type	"integer"
format	"uint16"
default	0
limit	
type	"integer"
format	"uint16"
default	30
EditCommentDto	
type	"object"
properties	
postId	
type	"integer"
format	"uint16"
body	
type	"string"
minLength	1
EditCourseDto	
type	"object"
properties	
title	
type	"string"
minLength	1
description	
type	"string"
minLength	1
EditPostDto	
type	"object"
properties	
title	
type	"string"
minLength	1
body	
type	"string"
minLength	1
EditTaskDto	
type	"object"
properties	
title	
type	"string"
minLength	1
description	
type	"string"
minLength	1
status	
$ref	"#/components/schemas/Status"
EditUserDto	
type	"object"
properties	
email	
type	"string"
minLength	1
firstName	
type	"string"
minLength	1
lastName	
type	"string"
minLength	1
NewCommentDto	
type	"object"
required	
0	"postId"
1	"body"
properties	
postId	
type	"integer"
format	"uint16"
body	
type	"string"
minLength	1
NewCourseDto	
type	"object"
required	
0	"title"
1	"description"
properties	
title	
type	"string"
minLength	1
description	
type	"string"
minLength	1
NewPostDto	
type	"object"
required	
0	"title"
1	"body"
properties	
title	
type	"string"
minLength	1
body	
type	"string"
minLength	1
NewTaskDto	
type	"object"
required	
0	"title"
1	"description"
properties	
title	
type	"string"
minLength	1
description	
type	"string"
minLength	1
status	
allOf	
0	
$ref	"#/components/schemas/Status"
default	"Backlog"
NewUserDto	
type	"object"
required	
0	"email"
1	"firstName"
2	"lastName"
3	"password"
properties	
email	
type	"string"
minLength	1
firstName	
type	"string"
minLength	1
lastName	
type	"string"
minLength	1
password	
type	"string"
minLength	1
Post	
type	"object"
required	
0	"id"
1	"authorId"
2	"title"
3	"body"
properties	
id	
type	"integer"
format	"uint16"
authorId	
type	"integer"
format	"uint16"
title	
type	"string"
minLength	1
body	
type	"string"
minLength	1
Posts	
type	"object"
required	
0	"posts"
1	"total"
2	"skip"
3	"limit"
properties	
posts	
type	"array"
items	
$ref	"#/components/schemas/Post"
total	
type	"integer"
format	"uint16"
skip	
type	"integer"
format	"uint16"
limit	
type	"integer"
format	"uint16"
default	30
Status	
type	"string"
enum	
0	"Backlog"
1	"Ready"
2	"In Progress"
3	"Done"
4	"Archived"
Task	
type	"object"
required	
0	"id"
1	"title"
2	"description"
3	"status"
properties	
id	
type	"integer"
format	"uint16"
title	
type	"string"
minLength	1
description	
type	"string"
minLength	1
status	
$ref	"#/components/schemas/Status"
Tasks	
type	"object"
required	
0	"tasks"
1	"total"
2	"skip"
3	"limit"
properties	
tasks	
type	"array"
items	
$ref	"#/components/schemas/Task"
total	
type	"integer"
format	"uint16"
skip	
type	"integer"
format	"uint16"
default	0
limit	
type	"integer"
format	"uint16"
default	30
User	
type	"object"
required	
0	"id"
1	"email"
2	"firstName"
3	"lastName"
properties	
id	
type	"integer"
format	"uint16"
email	
type	"string"
minLength	1
firstName	
type	"string"
minLength	1
lastName	
type	"string"
minLength	1
Users	
type	"object"
required	
0	"users"
1	"total"
2	"skip"
3	"limit"
properties	
users	
type	"array"
items	
$ref	"#/components/schemas/User"
total	
type	"integer"
format	"uint16"
skip	
type	"integer"
format	"uint16"
default	0
limit	
type	"integer"
format	"uint16"
default	30
Versions	
type	"string"
enum	
0	"1.0"
securitySchemes	
BearerAuth	
type	"http"
scheme	"bearer"
ApiKeyAuth	
type	"apiKey"
in	"header"
name	"X-API-KEY"
BasicAuth	
type	"http"
scheme	"basic"
servers	
0	
url	"/postman"
description	"Server endpoint"
variables	{}
